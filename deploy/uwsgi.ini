[uwsgi]
# use protocol uwsgi, port 8000 ,  TCP port socket
socket=da_sys.sock

master=true
# maximum number of worker processes
processes=1
threads=6
# Django's wsgi file
module=da_sys_django.wsgi:application


# clear environment on exit
vacuum = true

log-format = [%(ctime)] - %(addr) <%(user)> "%(method) %(uri)" (%(proto) %(status)) [pid: %(pid)] => generated %(rsize) bytes in %(msecs) msecs with %(headers) headers in %(hsize) bytes (%(switches) switches on core %(core) - RSS %(rss) bytes) 
logto = /tmp/log/uwsgi.log
logfile-chmod = 664
#req-logger = file:/tmp/log/uwsgi_req.log
#logger = file:/tmp/log/uwsgi_info.log
log-drain = ."GET /".

###### setting up cache #######
# create a cache with 100 items (default size per-item is 64k)
# cache2 = name=mycache,items=100
# load the mime types engine
# mime-file = /etc/mime.types

# at each request ending with .css check it in the cache
# route = \.css$ cache:key=${REQUEST_URI},name=mycache,content_type=text/css

# fallback to text/html all of the others request
# route = .* cache:key=${REQUEST_URI},name=mycache
# store each successful request (200 http status code) in the 'mycache' cache using the REQUEST_URI as key
# route = .* cachestore:key=${REQUEST_URI},name=mycache

