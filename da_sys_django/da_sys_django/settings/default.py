"""
Django settings for da_sys_django project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'da-sys-django-r^v(^9+el6gnaa3gyjk121^+g@v4c=^+)c%h#$_)i3bi66cy3f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'recommender',
    # allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # google provider
    'allauth.socialaccount.providers.google',
]

# for django-allauth
SITE_ID = 1

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

# Point to custom account adapter.
ACCOUNT_ADAPTER = 'da_sys_django.adapter.SignUpAccountAdapter'

# allow signups.
ACCOUNT_ALLOW_SIGNUPS = True

ALLOW_SIGNUP_GOOGLE_HOST = ['adcrow.tech']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'da_sys_django.urls'

# redirect to url after login when applying built-in auth

LOGIN_REDIRECT_URL = '/'

LOGOUT_REDIRECT_URL = '/login'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'da_sys_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# django.db.backends.mysql
# mysql.connector.django
DATABASES = {
    'default': {
        'ENGINE': 'mysql.connector.django',
        'NAME': 'daSystem',
        'USER': 'IMwindcon_keep',
        'PASSWORD': 'Lei7YtsAb_ship',
        'HOST': '10.30.2.144',
        'PORT': 3306,
        'OPTIONS': {
            'time_zone': '+00:00',
            'sql_mode': 'STRICT_TRANS_TABLES',
        }
    },
    'maria_read': {
        'ENGINE': 'mysql.connector.django',
        'NAME': 'MaReport',
        'USER': 'IMkumquat_keep',
        'PASSWORD': 'G2vi7A6Sx_ship',
        'HOST': '10.30.2.145',
        'PORT': 3306,
        'OPTIONS': {
            'time_zone': '+00:00',
            'sql_mode': 'STRICT_TRANS_TABLES',
        }
    },
}

if 'test' in sys.argv:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'test_db.sqlite3',
    }

# cache

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:redis4SYS@10.30.3.52:3002/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 600

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'simple':
            {'format': '[%(asctime)s] %(name)s - %(levelname)s - %(message)s'},
        'console':
            {'format': '[%(name)s] %(levelname)s - %(message)s'}
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'formatter': 'console',
            'filters': ['require_debug_true'],
            'stream': 'ext://sys.stdout'
        },
        'info_file_handler': {
            'class': 'logging.handlers.RotatingFileHandler',
            'level': 'INFO',
            'formatter': 'simple',
            'filename': BASE_DIR / 'log/info.log',
            'maxBytes': 20971520,  # 20MB
            'backupCount': 20,
            'encoding': 'utf8'
            },
        'error_file_handler': {
            'class': 'logging.handlers.RotatingFileHandler',
            'level': 'ERROR',
            'formatter': 'simple',
            'filename': BASE_DIR / 'log/error.log',
            'maxBytes': 20971520,  # 20MB
            'backupCount': 20,
            'encoding': 'utf8'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.server': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'recommender': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'dao': {
            'handlers': ['console', 'info_file_handler', 'error_file_handler'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console', 'info_file_handler', 'error_file_handler'],
        'level': 'DEBUG',
    },
}

# settings for default superuser
# https://docs.djangoproject.com/en/3.0/ref/django-admin/#django-admin-createsuperuser
DJANGO_SUPERUSER_USERNAME = 'admin'

DJANGO_SUPERUSER_EMAIL = 'rmpeter0474@adcrow.tech'

DJANGO_SUPERUSER_PASSWORD = 'admin'

# rest framework global setting
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}
